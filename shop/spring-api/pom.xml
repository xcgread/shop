<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xuzhihao.shop</groupId>
	<artifactId>spring-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath />
	</parent>
	<modules>
		<module>springboot-common</module>
		<module>springboot-mbg</module>
		<module>springboot-activemq</module>
		<module>springboot-aop</module>
		<module>springboot-email</module>
		<module>springboot-ureport2</module>
		<module>springboot-webflux</module>
		<module>springboot-redis</module>
		<module>springboot-kafka</module>
		<module>springboot-rabbitmq</module>
		
		<module>springboot-dubbo-consumer</module>
		<module>springboot-dubbo-provider</module>
		<module>springboot-netty-cli</module>
		<module>springboot-netty-ser</module>
		<module>springcloud-dubbo-consumer</module>
		<module>springcloud-dubbo-provider</module>

	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<docker.host>http://172.17.17.80:2375</docker.host>
		<docker.maven.plugin.version>1.1.0</docker.maven.plugin.version>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
		<spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
		<cn-common.version>0.0.1-SNAPSHOT</cn-common.version>
		<cn-mbg.version>0.0.1-SNAPSHOT</cn-mbg.version>
		<hutool.version>4.5.7</hutool.version>
		<knife4j.version>2.0.4</knife4j.version>
		<logstash-logback.version>5.3</logstash-logback.version>
		<admin-starter-server.version>2.2.3</admin-starter-server.version>
		<pagehelper-starter.version>1.2.10</pagehelper-starter.version>
		<pagehelper.version>5.1.8</pagehelper.version>
		<druid.version>1.1.10</druid.version>
		<redisson.version>3.13.2</redisson.version>
		<mybatis-generator.version>1.3.7</mybatis-generator.version>
		<mysql-connector.version>8.0.16</mysql-connector.version>
		<mybatis-spring.version>2.1.0</mybatis-spring.version>
		<ureport-starter.version>2.2.9</ureport-starter.version>
		<dubbo.version>2.7.7</dubbo.version>
		<fastdfs.version>1.27.0.0</fastdfs.version>
		<swagger2.version>2.9.2</swagger2.version>
		<swagger-models.version>1.6.0</swagger-models.version>
		<swagger-annotations.version>1.6.0</swagger-annotations.version>
		<cxf-springboot.version>3.4.0</cxf-springboot.version>
		<jjwt.version>0.9.0</jjwt.version>
		<nimbus-jose-jwt.version>8.16</nimbus-jose-jwt.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<!--Spring Cloud 相关依赖 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--Spring Cloud Alibaba 相关依赖 -->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.xuzhihao.shop</groupId>
				<artifactId>springboot-common</artifactId>
				<version>${cn-common.version}</version>
			</dependency>
			<!--MBG生成模块 -->
			<dependency>
				<groupId>com.xuzhihao.shop</groupId>
				<artifactId>springboot-mbg</artifactId>
				<version>${cn-mbg.version}</version>
			</dependency>
			<!--集成druid连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!--Hutool Java工具包 -->
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<!--Knife4j API文档生产工具 -->
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-micro-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
			<!--Swagger-UI API文档生产工具 -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger2.version}</version>
			</dependency>
			<!--解决Swagger 2.9.2版本NumberFormatException -->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-models</artifactId>
				<version>${swagger-models.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>
			<!--集成logstash -->
			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback.version}</version>
			</dependency>
			<!--集成SpringBoot Admin监控 -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>${admin-starter-server.version}</version>
			</dependency>
			<!--MyBatis分页插件starter -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-starter.version}</version>
			</dependency>
			<!--MyBatis分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>${pagehelper.version}</version>
			</dependency>
			<!--Redisson分布式锁定 -->
			<dependency>
				<groupId>org.redisson</groupId>
				<artifactId>redisson</artifactId>
				<version>${redisson.version}</version>
			</dependency>
			<!--Mysql数据库驱动 -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>
			<!-- MyBatis 生成器 -->
			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>${mybatis-generator.version}</version>
			</dependency>
			<!-- MyBatis -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>
			<!-- ureport2报表插件 -->
			<dependency>
				<groupId>com.syyai.spring.boot</groupId>
				<artifactId>ureport-spring-boot-starter</artifactId>
				<version>${ureport-starter.version}</version>
			</dependency>
			<!-- Dubbo Spring Boot Starter -->
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-spring-boot-starter</artifactId>
				<version>${dubbo.version}</version>
			</dependency>
			<!-- fastdfs -->
			<dependency>
				<groupId>net.oschina.zcx7878</groupId>
				<artifactId>fastdfs-client-java</artifactId>
				<version>${fastdfs.version}</version>
			</dependency>
			<!-- CXF webservice -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
				<version>${cxf-springboot.version}</version>
			</dependency>
			<!--JWT(Json Web Token)登录支持 -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<!--JWT(Json Web Token)登录支持 -->
			<dependency>
				<groupId>com.nimbusds</groupId>
				<artifactId>nimbus-jose-jwt</artifactId>
				<version>${nimbus-jose-jwt.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.maven.plugin.version}</version>
					<executions>
						<execution>
							<id>build-image</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!--镜像名，这里用工程名 ：版本号 -->
						<imageName>webapp/${project.artifactId}:${project.version}</imageName>
						<!-- 强制docker覆盖每个新构建的图像标记： -->
						<forceTags>true</forceTags>
						<dockerHost>${docker.host}</dockerHost>
						<!--镜像的FROM，使用java官方镜像 -->
						<baseImage>java:8</baseImage>
						<!--该镜像的容器启动后，直接运行spring boot工程 -->
						<entryPoint>["java","-jar","-Dspring.profiles.active=prod","/${project.build.finalName}.jar"]</entryPoint>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project> 